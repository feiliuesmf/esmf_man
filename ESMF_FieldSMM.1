  26.6.73 ESMF_FieldSMM - Execute a Field sparse matrix multiplication

   INTERFACE:
   subroutine ESMF_FieldSMM(srcField, dstField, routehandle, &
              zeroregion, termorderflag, checkflag, rc)

   ARGUMENTS:
         type(ESMF_Field),          intent(in),    optional  :: srcField
         type(ESMF_Field),          intent(inout), optional  :: dstField
         type(ESMF_RouteHandle),    intent(inout)            :: routehandle
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
         type(ESMF_Region_Flag),    intent(in),    optional  :: zeroregion
         type(ESMF_TermOrder_Flag), intent(in),    optional  :: termorderflag
         logical,                   intent(in),    optional  :: checkflag
         integer,                   intent(out),   optional  :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.

        6.1.0
                Added argument termorderflag. The new argument gives the
                user control over the order in which the src terms are
                summed up.

   DESCRIPTION:

   Execute a precomputed Field sparse matrix multiplication from srcField
   to dstField. Both srcField and dstField must match the respective
   Fields used during ESMF_FieldSMMStore() in type, kind, and memory
   layout of the gridded dimensions. However, the size, number, and index
   order of ungridded dimensions may be different. See section
   [1004]37.2.5 for a more detailed discussion of RouteHandle reusability.

   The srcField and dstField arguments are optional in support of the
   situation where srcField and/or dstField are not defined on all PETs.
   The srcField and dstField must be specified on those PETs that hold
   source or destination DEs, respectively, but may be omitted on all
   other PETs. PETs that hold neither source nor destination DEs may omit
   both arguments.

   It is erroneous to specify the identical Field object for srcField and
   dstField arguments.

   See ESMF_FieldSMMStore() on how to precompute routehandle.

   This call is collective across the current VM.

   For examples and associated documentation regarding this method see
   Section [1005]26.3.33.

   [srcField]
          ESMF_Field with source data.

   [dstField]
          ESMF_Field with destination data.

   routehandle
          Handle to the precomputed Route.

   [zeroregion]
          If set to ESMF_REGION_TOTAL (default) the total regions of all
          DEs in dstField will be initialized to zero before updating the
          elements with the results of the sparse matrix multiplication.
          If set to ESMF_REGION_EMPTY the elements in dstField will not be
          modified prior to the sparse matrix multiplication and results
          will be added to the incoming element values. Setting zeroregion
          to ESMF_REGION_SELECT will only zero out those elements in the
          destination Field that will be updated by the sparse matrix
          multiplication. See section [1006]54.48 for a complete list of
          valid settings.

   [termorderflag]
          Specifies the order of the source side terms in all of the
          destination sums. The termorderflag only affects the order of
          terms during the execution of the RouteHandle. See the
          [1007]37.2.1 section for an in-depth discussion of all
          bit-for-bit reproducibility aspects related to route-based
          communication methods. See [1008]54.58 for a full list of
          options. The default is ESMF_TERMORDER_FREE, allowing maximum
          flexibility in the order of terms for optimum performance.

   [checkflag]
          If set to .TRUE. the input Field pair will be checked for
          consistency with the precomputed operation provided by
          routehandle. If set to .FALSE. (default) only a very basic input
          check will be performed, leaving many inconsistencies
          undetected. Set checkflag to .FALSE. to achieve highest
          performance.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

