  21.7.4 ESMF_StateAdd - Add a list of items to a State

   INTERFACE:
   subroutine ESMF_StateAdd(state, <itemList>, relaxedFlag, rc)

   ARGUMENTS:
   type(ESMF_State), intent(inout) :: state
   <itemList>, see below for supported values
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
   logical, intent(in), optional :: relaxedFlag
   integer, intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.

   DESCRIPTION:

   Add a list of items to a ESMF_State. It is an error if any item in
   <itemlist> already matches, by name, an item already contained in
   state.

   Supported values for <itemList> are:

          type(ESMF_Array), intent(in) :: arrayList(:)

          type(ESMF_ArrayBundle), intent(in) :: arraybundleList(:)

          type(ESMF_Field), intent(in) :: fieldList(:)

          type(ESMF_FieldBundle), intent(in) :: fieldbundleList(:)

          type(ESMF_RouteHandle), intent(in) :: routehandleList(:)

          type(ESMF_State), intent(in) :: nestedStateList(:)

   The arguments are:

   state
          An ESMF_State to which the <itemList> will be added.

   <itemList>
          The list of items to be added. This is a reference only; when
          the ESMF_State is destroyed the <itemList> items contained
          within it will not be destroyed. Also, the items in the
          <itemList> cannot be safely destroyed before the ESMF_State is
          destroyed. Since <itemList> items can be added to multiple
          containers, it remains the responsibility of the user to manage
          their destruction when they are no longer in use.

   [relaxedflag]
          A setting of .true. indicates a relaxed definition of "add",
          where it is not an error if <itemList> contains items with names
          that are found in state. The State is left unchanged for these
          items. For .false. this is treated as an error condition. The
          default setting is .false..

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

