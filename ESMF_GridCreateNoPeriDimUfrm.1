  31.6.26 ESMF_GridCreateNoPeriDimUfrm - Create a uniform Grid with no periodic
  dim and a regular distribution

   INTERFACE:
  ! Private name; call using ESMF_GridCreateNoPeriDimUfrm()
       function ESMF_GridCreateNoPeriDimUfrmR(minIndex, maxIndex, &
         minCornerCoord, maxCornerCoord, &
         regDecomp, decompFlag, &
         coordSys, staggerLocList, petMap, name, rc)

   RETURN VALUE:
       type(ESMF_Grid) :: ESMF_GridCreateNoPeriDimUfrmR

   ARGUMENTS:
        integer,                   intent(in),  optional :: minIndex(:)
        integer,                   intent(in)            :: maxIndex(:)
        real(ESMF_KIND_R8),        intent(in)            :: minCornerCoord(:)
        real(ESMF_KIND_R8),        intent(in)            :: maxCornerCoord(:)
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
        integer,                   intent(in),  optional :: regDecomp(:)
        type(ESMF_Decomp_Flag),    intent(in),  optional :: decompflag(:)
        type(ESMF_CoordSys_Flag),  intent(in),  optional :: coordSys
        type(ESMF_StaggerLoc),     intent(in),  optional :: staggerLocList(:)
        integer,                   intent(in),  optional :: petMap(:,:,:)
        character (len=*),         intent(in),  optional :: name
        integer,                   intent(out), optional :: rc

   DESCRIPTION:

   This method creates a single tile, regularly distributed grid (see
   Figure [1326]13) with no periodic dimension.

   The resulting grid will have its coordinates uniformly spread between
   the ranges specified by the user. The coordinates are ESMF_TYPEKIND_R8.
   Currently, this method only fills the center stagger with coordinates,
   and the minCornerCoord and maxCornerCoord arguments give the boundaries
   of the center stagger.

   To specify the distribution, the user passes in an array (regDecomp)
   specifying the number of DEs to divide each dimension into. The array
   decompFlag indicates how the division into DEs is to occur. The default
   is to divide the range as evenly as possible. Currently this call only
   supports creating a 2D or 3D Grid, and thus, for example, maxIndex must
   be of size 2 or 3.

   The following arguments have been set to non-typical values and so
   there is a reasonable possibility that they may change in the future to
   be inconsistent with other Grid create interfaces:

   The arguements coordDep1, coordDep2, and coordDep3 have internally been
   set to 1, 2, and 3 respectively. This was done because this call
   creates a uniform grid and so only 1D arrays are needed to hold the
   coordinates. This means the coordinate arrays will be 1D.

   The argument indexFlag has internally been set to ESMF_INDEX_GLOBAL.
   This means that the grid created from this function will have a global
   index space.

   The arguments are:

   [minIndex]
          The bottom extent of the grid array. If not given then the value
          defaults to /1,1,1,.../.

   maxIndex
          The upper extent of the grid array.

   minCornerCoord
          The coordinates of the corner of the grid that corresponds to
          minIndex. size(minCornerCoord) must be equal to size(maxIndex).

   maxCornerCoord
          The coordinates of the corner of the grid that corresponds to
          maxIndex. size(maxCornerCoord) must be equal to size(maxIndex).

   [regDecomp]
          A ndims-element array specifying how the grid is decomposed.
          Each entry is the number of decounts for that dimension.

   [decompflag]
          List of decomposition flags indicating how each dimension of the
          tile is to be divided between the DEs. The default setting is
          ESMF_DECOMP_BALANCED in all dimensions. Please see
          Section [1327]54.13 for a full description of the possible
          options. Note that currently the option ESMF_DECOMP_CYCLIC isn't
          supported in Grid creation.

   [coordSys]
          The coordinate system of the grid coordinate data. For a full
          list of options, please see Section [1328]54.11. If not
          specified then defaults to ESMF_COORDSYS_SPH_DEG.

   [staggerLocList]
          The list of stagger locations to fill with coordinates. Please
          see Section [1329]31.2.6 for a description of the available
          stagger locations. If not present, then no staggers are added or
          filled.

   [petMap]
          Sets the mapping of pets to the created DEs. This 3D should be
          of size regDecomp(1) x regDecomp(2) x regDecomp(3) If the Grid
          is 2D, then the last dimension is of size 1.

   [name]
          ESMF_Grid name.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

