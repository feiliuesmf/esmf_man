  26.6.44 ESMF_FieldEmptyCreate - Create an empty Field

   INTERFACE:
   function ESMF_FieldEmptyCreate(name, vm, rc)

   RETURN VALUE:
     type(ESMF_Field) :: ESMF_FieldEmptyCreate

   ARGUMENTS:
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
     character (len = *), intent(in), optional :: name
     type(ESMF_VM), intent(in), optional :: vm
     integer, intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.
     * This interface was modified since ESMF version 5.2.0r. The fact
       that code using this interface compiles with the current ESMF
       version does not guarantee that it compiles with previous versions
       of this interface. If user code compatibility with version 5.2.0r
       is desired then care must be taken to limit the use of this
       interface to features that were available in the 5.2.0r release.
       Changes made after the 5.2.0r release:

        8.0.0
                Added argument vm to support object creation on a
                different VM than that of the current context.

   DESCRIPTION:

   This version of ESMF_FieldCreate builds an empty ESMF_Field and depends
   on later calls to add an ESMF_Grid and ESMF_Array to it. The empty
   ESMF_Field can be completed in one more step or two more steps by the
   ESMF_FieldEmptySet and ESMF_FieldEmptyComplete methods. Attributes can
   be added to an empty Field object. For an example and associated
   documentation using this method see section [917]26.3.8 and
   [918]26.3.7.

   The arguments are:

   [name]
          Field name.

   [vm]
          If present, the Field object is created on the specified ESMF_VM
          object. The default is to create on the VM of the current
          component context.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

