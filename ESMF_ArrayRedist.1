  28.5.28 ESMF_ArrayRedist - Execute an Array redistribution

   INTERFACE:
   subroutine ESMF_ArrayRedist(srcArray, dstArray, routehandle, &
     routesyncflag, finishedflag, cancelledflag, zeroregion, checkflag, rc)

   ARGUMENTS:
     type(ESMF_Array),          intent(in),    optional :: srcArray
     type(ESMF_Array),          intent(inout), optional :: dstArray
     type(ESMF_RouteHandle),    intent(inout)           :: routehandle
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
     type(ESMF_RouteSync_Flag), intent(in),    optional :: routesyncflag
     logical,                   intent(out),   optional :: finishedflag
     logical,                   intent(out),   optional :: cancelledflag
     type(ESMF_Region_Flag),    intent(in),    optional :: zeroregion
     logical,                   intent(in),    optional :: checkflag
     integer,                   intent(out),   optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.
     * This interface was modified since ESMF version 5.2.0r. The fact
       that code using this interface compiles with the current ESMF
       version does not guarantee that it compiles with previous versions
       of this interface. If user code compatibility with version 5.2.0r
       is desired then care must be taken to limit the use of this
       interface to features that were available in the 5.2.0r release.
       Changes made after the 5.2.0r release:

        7.1.0r
                Added argument zeroregion to allow user to control how the
                destination array is zero'ed out. This is especially
                useful in cases where the source and destination arrays do
                not cover the identical index space.

   DESCRIPTION:

   Execute a precomputed Array redistribution from srcArray to dstArray.
   Both srcArray and dstArray must match the respective Arrays used during
   ESMF_ArrayRedisttore() in type, kind, and memory layout of the
   distributed dimensions. However, the size, number, and index order of
   undistributed dimensions may be different. See section [1102]37.2.5 for
   a more detailed discussion of RouteHandle reusability.

   The srcArray and dstArray arguments are optional in support of the
   situation where srcArray and/or dstArray are not defined on all PETs.
   The srcArray and dstArray must be specified on those PETs that hold
   source or destination DEs, respectively, but may be omitted on all
   other PETs. PETs that hold neither source nor destination DEs may omit
   both arguments.

   It is erroneous to specify the identical Array object for srcArray and
   dstArray arguments.

   See ESMF_ArrayRedistStore() on how to precompute routehandle.

   This call is collective across the current VM.

   [srcArray]
          ESMF_Array with source data.

   [dstArray]
          ESMF_Array with destination data.

   routehandle
          Handle to the precomputed Route.

   [routesyncflag]
          Indicate communication option. Default is
          ESMF_ROUTESYNC_BLOCKING, resulting in a blocking operation. See
          section [1103]54.51 for a complete list of valid settings.

   [finishedflag]
          Used in combination with routesyncflag =
          ESMF_ROUTESYNC_NBTESTFINISH. Returned finishedflag equal to
          .true. indicates that all operations have finished. A value of
          .false. indicates that there are still unfinished operations
          that require additional calls with routesyncflag =
          ESMF_ROUTESYNC_NBTESTFINISH, or a final call with routesyncflag
          = ESMF_ROUTESYNC_NBWAITFINISH. For all other routesyncflag
          settings the returned value in finishedflag is always .true..

   [cancelledflag]
          A value of .true. indicates that were cancelled communication
          operations. In this case the data in the dstArray must be
          considered invalid. It may have been partially modified by the
          call. A value of .false. indicates that none of the
          communication operations was cancelled. The data in dstArray is
          valid if finishedflag returns equal .true..

   [zeroregion]
          If set to ESMF_REGION_TOTAL the total regions of all DEs in
          dstArray will be initialized to zero before updating the
          elements with the results of the sparse matrix multiplication.
          If set to ESMF_REGION_EMPTY the elements in dstArray will not be
          modified prior to the sparse matrix multiplication and results
          will be added to the incoming element values. Setting zeroregion
          to ESMF_REGION_SELECT will only zero out those elements in the
          destination Array that will be updated by the sparse matrix
          multiplication. See section [1104]54.48 for a complete list of
          valid settings. The default is ESMF_REGION_SELECT.

   [checkflag]
          If set to .TRUE. the input Array pair will be checked for
          consistency with the precomputed operation provided by
          routehandle. If set to .FALSE. (default) only a very basic input
          check will be performed, leaving many inconsistencies
          undetected. Set checkflag to .FALSE. to achieve highest
          performance.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

