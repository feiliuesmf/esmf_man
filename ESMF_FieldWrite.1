  26.6.82 ESMF_FieldWrite - Write Field data into a file

   INTERFACE:
   subroutine ESMF_FieldWrite(field, fileName,   &
       variableName, convention, purpose, overwrite, status, timeslice, iofmt, r
c)

   ARGUMENTS:
     type(ESMF_Field),           intent(in)             :: field
     character(*),               intent(in)             :: fileName
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
     character(*),               intent(in),  optional  :: variableName
     character(*),               intent(in),  optional  :: convention
     character(*),               intent(in),  optional  :: purpose
     logical,                    intent(in),  optional  :: overwrite
     type(ESMF_FileStatus_Flag), intent(in),  optional  :: status
     integer,                    intent(in),  optional  :: timeslice
     type(ESMF_IOFmt_Flag),      intent(in),  optional  :: iofmt
     integer,                    intent(out), optional  :: rc

   DESCRIPTION:

   Write Field data into a file. For this API to be functional, the
   environment variable ESMF_PIO should be set to either "internal" or
   "external" when the ESMF library is built. Please see the section on
   Data I/O, [1031]38.2.

   When convention and purpose arguments are specified, a NetCDF variable
   can be created with user-specified dimension labels and attributes.
   Dimension labels may be defined for both gridded and ungridded
   dimensions. Dimension labels for gridded dimensions are specified at
   the Grid level by attaching an ESMF Attribute package to it. The
   Attribute package must contain an attribute named by the pre-defined
   ESMF parameter ESMF_ATT_GRIDDED_DIM_LABELS. The corresponding value is
   an array of character strings specifying the desired names of the
   dimensions. Likewise, for ungridded dimensions, an Attribute package is
   attached at the Field level. The name of the name must be
   ESMF_ATT_UNGRIDDED_DIM_LABELS.

   NetCDF attributes for the variable can also be specified. As with
   dimension labels, an Attribute package is added to the Field with the
   desired names and values. A value may be either a scalar character
   string, or a scalar or array of type integer, real, or double
   precision. Dimension label attributes can co-exist with variable
   attributes within a common Attribute package.

   Limitations:
     * Not supported in ESMF_COMM=mpiuni mode.

   The arguments are:

   field
          The ESMF_Field object that contains data to be written.

   fileName
          The name of the output file to which Field data is written. If
          the Field is a multi-tile Array, then fileName must contain
          exactly one instance of "*"; this is a placeholder that will be
          replaced by the tile number, with each tile being written to a
          separate file. (For example, for a fileName of "myfile*.nc",
          tile 1 will be written to "myfile1.nc", tile 2 to "myfile2.nc",
          etc.) (This handling of the fileName for multi-tile I/O is
          subject to change.)

   [variableName]
          Variable name in the output file; default is the "name" of
          field. Use this argument only in the I/O format (such as NetCDF)
          that supports variable name. If the I/O format does not support
          this (such as binary format), ESMF will return an error code.

   [convention]
          Specifies an Attribute package associated with the Field, used
          to create NetCDF dimension labels and attributes for the
          variable in the file. When this argument is present, the purpose
          argument must also be present. Use this argument only with a
          NetCDF I/O format. If binary format is used, ESMF will return an
          error code.

   [purpose]
          Specifies an Attribute package associated with the Field, used
          to create NetCDF dimension labels and attributes for the
          variable in the file. When this argument is present, the
          convention argument must also be present. Use this argument only
          with a NetCDF I/O format. If binary format is used, ESMF will
          return an error code.

   [overwrite]
          A logical flag, the default is .false., i.e., existing field
          data may not be overwritten. If .true., only the data
          corresponding to the field's name will be overwritten. Note that
          it is always an error to attempt to overwrite a NetCDF variable
          with data which has a different shape.

   [status]
          The file status. Please see Section [1032]54.21 for the list of
          options. If not present, defaults to ESMF_FILESTATUS_UNKNOWN.

   [timeslice]
          Some I/O formats (e.g. NetCDF) support the output of data in
          form of time slices. An unlimited dimension called time is
          defined in the file variable for this capability. The timeslice
          argument provides access to the time dimension, and must have a
          positive value. The behavior of this option may depend on the
          setting of the overwrite flag:

        overwrite = .false.:
                If the timeslice value is less than the maximum time
                already in the file, the write will fail.

        overwrite = .true.:
                Any positive timeslice value is valid.

          By default, i.e. by omitting the timeslice argument, no
          provisions for time slicing are made in the output file,
          however, if the file already contains a time axis for the
          variable, a timeslice one greater than the maximum will be
          written.

   [iofmt]
          The I/O format. Please see Section [1033]54.28 for the list of
          options. If not present, defaults to ESMF_IOFMT_NETCDF.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

26.7 Class API: Field Utilities

