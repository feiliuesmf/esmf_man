  48.5.5 ESMF_HConfigAddMapVal - Add <Type> content to HConfig MapVal object

   INTERFACE:
    subroutine ESMF_HConfigAdd(hconfig, content, &
      addKey, addKeyString, index, keyString, doc, rc)

   ARGUMENTS:
      type(ESMF_HConfigIter), intent(in)        :: hconfig
      <Type>,             intent(in)            :: content[(:)]
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      type(ESMF_HConfig), intent(in),  optional :: addKey
      character(*),       intent(in),  optional :: addKeyString
      integer,            intent(in),  optional :: index
      character(*),       intent(in),  optional :: keyString
      integer,            intent(in),  optional :: doc
      integer,            intent(out), optional :: rc

   DESCRIPTION:

   Add the content of type <Type> to the hconfig map value, at the current
   location, or as specified by index or keyString (mutually exclusive!).
   Most <Type> options support the sequence array variant (:) in addition
   to the scalar variant.

   If either addKey or addKeyString (mutually exclusive!) is specified,
   then add a new map element with the respective key. Otherwise add a new
   list element at the end of the list. Error checking is implemented to
   ensure respective conditions are met.

   The supported <Type> options are:
     * type(HConfig) (scalar only variant!)
     * integer(ESMF_KIND_I4)
     * integer(ESMF_KIND_I8)
     * logical
     * real(ESMF_KIND_R4)
     * real(ESMF_KIND_R8)
     * character(*)

   The arguments are:

   hconfig
          ESMF_HConfigIter object.

   content
          The content to be added.

   [addKey]
          The key under which to add the new map item. Mutural exclusive
          with addKeyString.

   [addKeyString]
          The key string under which to add the new map item. Mutural
          exclusive with addKey.

   [index]
          Attempt to access by index if specified. Mutural exclusive with
          keyString.

   [keyString]
          Attempt to access by key string if specified. Mutural exclusive
          with index.

   [doc]
          The doc index. Defaults to the first document.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

  48.5.6 ESMF_HConfigAs<TypeSpec> - Return value as <Type>

   INTERFACE:
    function ESMF_HConfigAs<TypeSpec>(hconfig, index, keyString, &
      doc, asOkay, rc)

   RETURN VALUE:
      <Type> :: ESMF_HConfigAs<TypeSpec>

   ARGUMENTS:
      type(ESMF_HConfig[Iter]) , intent(in)     :: hconfig
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      integer,            intent(in),  optional :: index
      character(*),       intent(in),  optional :: keyString
      integer,            intent(in),  optional :: doc
      logical,            intent(out), optional :: asOkay
      integer,            intent(out), optional :: rc

   DESCRIPTION:

   Return the value of item hconfig interpreted as <Type>. The returned
   value is only valid if rc == ESMF_SUCCESS, and, if provided, asOkay ==
   .true..

   The supported <Type> / <TypeSpec> options are:
     * integer(ESMF_KIND_I4) / I4
     * integer(ESMF_KIND_I8) / I8
     * logical / Logical
     * real(ESMF_KIND_R4) / R4
     * real(ESMF_KIND_R8) / R8
     * character(len=:), allocatable / String

   The arguments are:

   hconfig
          ESMF_HConfig or ESMF_HConfigIter object.

   [index]
          Attempt to access by index if specified. Mutural exclusive with
          keyString.

   [keyString]
          Attempt to access by key string if specified. Mutural exclusive
          with index.

   [doc]
          The doc index. Defaults to the first document.

   [asOkay]
          Set to .true. for successful convertion to the requested
          typekind. Set to .false. otherwise. By default, i.e. without
          asOkay, the latter condition leads to rc /= ESMF_SUCCESS.
          Providing asOkay returns rc == ESMF_SUCCESS in either case, and
          the validity of the returned converted value is determined by
          asOkay.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

  48.5.7 ESMF_HConfigAs<TypeSpec>MapKey - Return map key as <Type>

   INTERFACE:
    function ESMF_HConfigAs<TypeSpec>MapKey(hconfig, index, keyString, &
      doc, asOkay, rc)

   RETURN VALUE:
      <Type> :: ESMF_HConfigAs<TypeSpec>MapKey

   ARGUMENTS:
      type(ESMF_HConfigIter), intent(in)        :: hconfig
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      integer,            intent(in),  optional :: index
      character(*),       intent(in),  optional :: keyString
      integer,            intent(in),  optional :: doc
      logical,            intent(out), optional :: asOkay
      integer,            intent(out), optional :: rc

   DESCRIPTION:

   Return the map key of item hconfig interpreted as <Type>. The returned
   value is only valid if rc == ESMF_SUCCESS, and, if provided, asOkay ==
   .true..

   The supported <Type> / <TypeSpec> options are:
     * integer(ESMF_KIND_I4) / I4
     * integer(ESMF_KIND_I8) / I8
     * logical / Logical
     * real(ESMF_KIND_R4) / R4
     * real(ESMF_KIND_R8) / R8
     * character(len=:), allocatable / String

   The arguments are:

   hconfig
          ESMF_HConfigIter object.

   [index]
          Attempt to access by index if specified. Mutural exclusive with
          keyString.

   [keyString]
          Attempt to access by key string if specified. Mutural exclusive
          with index.

   [doc]
          The doc index. Defaults to the first document.

   [asOkay]
          Set to .true. for successful convertion to the requested
          typekind. Set to .false. otherwise. By default, i.e. without
          asOkay, the latter condition leads to rc /= ESMF_SUCCESS.
          Providing asOkay returns rc == ESMF_SUCCESS in either case, and
          the validity of the returned converted value is determined by
          asOkay.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

  48.5.8 ESMF_HConfigAs<TypeSpec>MapVal - Return map value as <Type>

   INTERFACE:
    function ESMF_HConfigAs<TypeSpec>MapVal(hconfig, index, keyString, &
      doc, asOkay, rc)

   RETURN VALUE:
      <Type> :: ESMF_HConfigAs<TypeSpec>MapVal

   ARGUMENTS:
      type(ESMF_HConfigIter), intent(in)        :: hconfig
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      integer,            intent(in),  optional :: index
      character(*),       intent(in),  optional :: keyString
      integer,            intent(in),  optional :: doc
      logical,            intent(out), optional :: asOkay
      integer,            intent(out), optional :: rc

   DESCRIPTION:

   Return the map value of item hconfig interpreted as <Type>. The
   returned value is only valid if rc == ESMF_SUCCESS, and, if provided,
   asOkay == .true..

   The supported <Type> / <TypeSpec> options are:
     * integer(ESMF_KIND_I4) / I4
     * integer(ESMF_KIND_I8) / I8
     * logical / Logical
     * real(ESMF_KIND_R4) / R4
     * real(ESMF_KIND_R8) / R8
     * character(len=:), allocatable / String

   The arguments are:

   hconfig
          ESMF_HConfigIter object.

   [index]
          Attempt to access by index if specified. Mutural exclusive with
          keyString.

   [keyString]
          Attempt to access by key string if specified. Mutural exclusive
          with index.

   [doc]
          The doc index. Defaults to the first document.

   [asOkay]
          Set to .true. for successful convertion to the requested
          typekind. Set to .false. otherwise. By default, i.e. without
          asOkay, the latter condition leads to rc /= ESMF_SUCCESS.
          Providing asOkay returns rc == ESMF_SUCCESS in either case, and
          the validity of the returned converted value is determined by
          asOkay.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

  48.5.9 ESMF_HConfigAs<TypeSpec>Seq - Return value as sequence array of <Type>

   INTERFACE:
    function ESMF_HConfigAs<TypeSpec>Seq(hconfig, index, keyString, &
      doc, asOkay, rc)

   RETURN VALUE:
      <Type>, allocatable :: ESMF_HConfigAs<TypeSpec>Seq(:)

   ARGUMENTS:
      type(ESMF_HConfig[Iter]), intent(in)      :: hconfig
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      integer,            intent(in),  optional :: index
      character(*),       intent(in),  optional :: keyString
      integer,            intent(in),  optional :: doc
      logical,            intent(out), optional :: asOkay
      integer,            intent(out), optional :: rc

   DESCRIPTION:

   Return the value of item hconfig interpreted as sequence of <Type>. The
   returned value is only valid if rc == ESMF_SUCCESS, and, if provided,
   asOkay == .true..

   The supported <Type> / <TypeSpec> options are:
     * integer(ESMF_KIND_I4) / I4
     * integer(ESMF_KIND_I8) / I8
     * logical / Logical
     * real(ESMF_KIND_R4) / R4
     * real(ESMF_KIND_R8) / R8
     * character(len=:), allocatable / String (See note about stringLen
       argument below!)

   An extra non-optional argument stringLen must be provided for the
   String option. This argument specifies the number of characters in each
   of the output strings. Longer actual string values are tuncated, while
   shorter actual string values are padded with white space.

   The arguments are:

   hconfig
          ESMF_HConfig or ESMF_HConfigIter object.

   [index]
          Attempt to access by index if specified. Mutural exclusive with
          keyString.

   [keyString]
          Attempt to access by key string if specified. Mutural exclusive
          with index.

   [doc]
          The doc index. Defaults to the first document.

   [asOkay]
          Set to .true. for successful convertion to the requested
          typekind. Set to .false. otherwise. By default, i.e. without
          asOkay, the latter condition leads to rc /= ESMF_SUCCESS.
          Providing asOkay returns rc == ESMF_SUCCESS in either case, and
          the validity of the returned converted value is determined by
          asOkay.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

  48.5.10 ESMF_HConfigAs<TypeSpec>SeqMapKey - Return map key value as sequence
  array of <Type>

   INTERFACE:
    function ESMF_HConfigAs<TypeSpec>SeqMapKey(hconfig, index, keyString, &
      doc, asOkay, rc)

   RETURN VALUE:
      <Type>, allocatable :: ESMF_HConfigAs<TypeSpec>SeqMapKey(:)

   ARGUMENTS:
      type(ESMF_HConfigIter), intent(in)        :: hconfig
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      integer,            intent(in),  optional :: index
      character(*),       intent(in),  optional :: keyString
      integer,            intent(in),  optional :: doc
      logical,            intent(out), optional :: asOkay
      integer,            intent(out), optional :: rc

   DESCRIPTION:

   Return the map key of item hconfig interpreted as sequence of <Type>.
   The returned value is only valid if rc == ESMF_SUCCESS, and, if
   provided, asOkay == .true..

   The supported <Type> / <TypeSpec> options are:
     * integer(ESMF_KIND_I4) / I4
     * integer(ESMF_KIND_I8) / I8
     * logical / Logical
     * real(ESMF_KIND_R4) / R4
     * real(ESMF_KIND_R8) / R8
     * character(len=:), allocatable / String (See note about stringLen
       argument below!)

   An extra non-optional argument stringLen must be provided for the
   String option. This argument specifies the number of characters in each
   of the output strings. Longer actual string values are tuncated, while
   shorter actual string values are padded with white space.

   The arguments are:

   hconfig
          ESMF_HConfig object.

   [index]
          Attempt to access by index if specified. Mutural exclusive with
          keyString.

   [keyString]
          Attempt to access by key string if specified. Mutural exclusive
          with index.

   [doc]
          The doc index. Defaults to the first document.

   [asOkay]
          Set to .true. for successful convertion to the requested
          typekind. Set to .false. otherwise. By default, i.e. without
          asOkay, the latter condition leads to rc /= ESMF_SUCCESS.
          Providing asOkay returns rc == ESMF_SUCCESS in either case, and
          the validity of the returned converted value is determined by
          asOkay.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

  48.5.11 ESMF_HConfigAs<TypeSpec>SeqMapVal - Return map value as sequence array
  of <Type>

   INTERFACE:
    function ESMF_HConfigAs<TypeSpec>SeqMapVal(hconfig, index, keyString, &
      doc, asOkay, rc)

   RETURN VALUE:
      <Type>, allocatable :: ESMF_HConfigAs<TypeSpec>SeqMapVal(:)

   ARGUMENTS:
      type(ESMF_HConfigIter), intent(in)        :: hconfig
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      integer,            intent(in),  optional :: index
      character(*),       intent(in),  optional :: keyString
      integer,            intent(in),  optional :: doc
      logical,            intent(out), optional :: asOkay
      integer,            intent(out), optional :: rc

   DESCRIPTION:

   Return the map value of item hconfig interpreted as sequence of <Type>.
   The returned value is only valid if rc == ESMF_SUCCESS, and, if
   provided, asOkay == .true..

   The supported <Type> / <TypeSpec> options are:
     * integer(ESMF_KIND_I4) / I4
     * integer(ESMF_KIND_I8) / I8
     * logical / Logical
     * real(ESMF_KIND_R4) / R4
     * real(ESMF_KIND_R8) / R8
     * character(len=:), allocatable / String (See note about stringLen
       argument below!)

   An extra non-optional argument stringLen must be provided for the
   String option. This argument specifies the number of characters in each
   of the output strings. Longer actual string values are tuncated, while
   shorter actual string values are padded with white space.

   The arguments are:

   hconfig
          ESMF_HConfigIter object.

   [index]
          Attempt to access by index if specified. Mutural exclusive with
          keyString.

   [keyString]
          Attempt to access by key string if specified. Mutural exclusive
          with index.

   [doc]
          The doc index. Defaults to the first document.

   [asOkay]
          Set to .true. for successful convertion to the requested
          typekind. Set to .false. otherwise. By default, i.e. without
          asOkay, the latter condition leads to rc /= ESMF_SUCCESS.
          Providing asOkay returns rc == ESMF_SUCCESS in either case, and
          the validity of the returned converted value is determined by
          asOkay.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

