  51.6.4 ESMF_VMAllFullReduce - Fully reduce data across VM, result on all PETs

   INTERFACE:
    subroutine ESMF_VMAllFullReduce(vm, sendData, recvData, &
      count, reduceflag, syncflag, commhandle, rc)

   ARGUMENTS:
      type(ESMF_VM),                    intent(in)            :: vm
      <type>(ESMF_KIND_<kind>), target, intent(in)            :: sendData(:)
      <type>(ESMF_KIND_<kind>),         intent(out)           :: recvData
      integer,                          intent(in)            :: count
      type(ESMF_Reduce_Flag),           intent(in)            :: reduceflag
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      type(ESMF_Sync_Flag),             intent(in),  optional :: syncflag
      type(ESMF_CommHandle),            intent(out), optional :: commhandle
      integer,                          intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.

   DESCRIPTION:

   Collective ESMF_VM communication call that reduces a contiguous data
   array of <type><kind> across the ESMF_VM object into a single value of
   the same <type><kind>. The result is returned on all PETs. Different
   reduction operations can be specified.

   This method is overloaded for: ESMF_TYPEKIND_I4, ESMF_TYPEKIND_I8,
   ESMF_TYPEKIND_R4, ESMF_TYPEKIND_R8.

   TODO: The current version of this method does not provide an
   implementation of the non-blocking feature. When calling this method
   with syncflag = ESMF_SYNC_NONBLOCKING, error code ESMF_RC_NOT_IMPL will
   be returned and an error will be logged.

   The arguments are:

   vm
          ESMF_VM object.

   sendData
          Contiguous data array holding data to be sent. All PETs must
          specify a valid source array.

   recvData
          Single data variable to be received. All PETs must specify a
          valid result variable.

   count
          Number of elements in sendData. Allowed to be different across
          the PETs, as long as count > 0.

   reduceflag
          Reduction operation. See section [609]54.47 for a list of valid
          reduce operations.

   [syncflag]
          Flag indicating whether this call behaves blocking or
          non-blocking. The default is ESMF_SYNC_BLOCKING. See section
          [610]54.57 for a complete list of options.

   [commhandle]
          If present, a communication handle will be returned in case of a
          non-blocking request (see argument syncflag). The commhandle can
          be used in ESMF_VMCommWait() to block the calling PET until the
          communication call has finished PET-locally. If no commhandle
          was supplied to a non-blocking call the VM method
          ESMF_VMCommWaitAll() may be used to block on all currently
          queued communication calls of the VM context.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

