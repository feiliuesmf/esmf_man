  45.5.18 ESMF_ClockSet - Set one or more properties of a Clock

   INTERFACE:
       subroutine ESMF_ClockSet(clock, &
         timeStep, startTime, stopTime, &
         runDuration, runTimeStepCount, refTime, currTime, advanceCount, &
         direction, name, rc)

   ARGUMENTS:
       type(ESMF_Clock),        intent(inout)         :: clock
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
       type(ESMF_TimeInterval), intent(in),  optional :: timeStep
       type(ESMF_Time),         intent(in),  optional :: startTime
       type(ESMF_Time),         intent(in),  optional :: stopTime
       type(ESMF_TimeInterval), intent(in),  optional :: runDuration
       integer,                 intent(in),  optional :: runTimeStepCount
       type(ESMF_Time),         intent(in),  optional :: refTime
       type(ESMF_Time),         intent(in),  optional :: currTime
       integer(ESMF_KIND_I8),   intent(in),  optional :: advanceCount
       type(ESMF_Direction_Flag),    intent(in),  optional :: direction
       character (len=*),       intent(in),  optional :: name
       integer,                 intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.

   DESCRIPTION:

   Sets/resets one or more of the properties of an ESMF_Clock that was
   previously initialized via ESMF_ClockCreate().

   The arguments are:

   clock
          The object instance to set.

   [timeStep]
          The ESMF_Clock's time step interval, which can be positive or
          negative. This is used to change a clock's timestep property for
          those applications that need variable timesteps. See
          ESMF_ClockAdvance() below for specifying variable timesteps that
          are NOT saved as the clock's internal time step property. See
          "direction" argument below for behavior with
          t ESMF_DIRECTION_REVERSE direction.

   [startTime]
          The ESMF_Clock's starting time. Can be less than or or greater
          than stopTime, depending on a positive or negative timeStep,
          respectively, and whether a stopTime is specified; see below.

   [stopTime]
          The ESMF_Clock's stopping time. Can be greater than or less than
          the startTime, depending on a positive or negative timeStep,
          respectively. If neither stopTime, runDuration, nor
          runTimeStepCount is specified, clock runs "forever"; user must
          use other means to know when to stop (e.g. ESMF_Alarm or
          ESMF_ClockGet(clock, currTime)). Mutually exclusive with
          runDuration and runTimeStepCount.

   [runDuration]
          Alternative way to specify ESMF_Clock's stopping time; stopTime
          = startTime + runDuration. Can be positive or negative,
          consistent with the timeStep's sign. Mutually exclusive with
          stopTime and runTimeStepCount.

   [runTimeStepCount]
          Alternative way to specify ESMF_Clock's stopping time; stopTime
          = startTime + (runTimeStepCount * timeStep). stopTime can be
          before startTime if timeStep is negative. Mutually exclusive
          with stopTime and runDuration.

   [refTime]
          The ESMF_Clock's reference time. See description in
          ESMF_ClockCreate() above.

   [currTime]
          The current time.

   [advanceCount]
          The number of times the clock has been timestepped.

   [direction]
          Sets the clock's time-stepping direction. If called with
          ESMF_DIRECTION_REVERSE, sets the clock in "reverse" mode,
          causing it to timestep back towards its startTime. If called
          with ESMF_DIRECTION_FORWARD, sets the clock in normal, "forward"
          mode, causing it to timestep in the direction of its startTime
          to stopTime. This holds true for negative timestep clocks as
          well, which are initialized (created) with stopTime < startTime.
          The default mode is ESMF_DIRECTION_FORWARD, established at
          ESMF_ClockCreate(). timeStep can also be specified as an
          argument at the same time, which allows for a change in
          magnitude and/or sign of the clock's timeStep. If not specified
          with ESMF_DIRECTION_REVERSE, the clock's current timeStep is
          effectively negated. If timeStep is specified, its sign is used
          as specified; it is not negated internally. E.g., if the
          specified timeStep is negative and the clock is placed in
          ESMF_DIRECTION_REVERSE, subsequent calls to ESMF_ClockAdvance()
          will cause the clock's current time to be decremented by the new
          timeStep's magnitude.

   [name]
          The new name for this clock.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

