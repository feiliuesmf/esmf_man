  21.7.5 ESMF_StateAddReplace - Add or replace a list of items to a State

   INTERFACE:
   subroutine ESMF_StateAddReplace(state, <itemList>, rc)

   ARGUMENTS:
   type(ESMF_State), intent(inout) :: state
   <itemList>, see below for supported values
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
   integer, intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.

   DESCRIPTION:

   Add or replace a list of items to an ESMF_State. If an item in
   <itemList> does not match any items already present in state, it is
   added. Items with names already present in the state replace the
   existing item.

   Supported values for <itemList> are:

          type(ESMF_Array), intent(in) :: arrayList(:)

          type(ESMF_ArrayBundle), intent(in) :: arraybundleList(:)

          type(ESMF_Field), intent(in) :: fieldList(:)

          type(ESMF_FieldBundle), intent(in) :: fieldbundleList(:)

          type(ESMF_RouteHandle), intent(in) :: routehandleList(:)

          type(ESMF_State), intent(in) :: nestedStateList(:)

   The arguments are:

   state
          An ESMF_State to which the <itemList> will be added or replaced.

   <itemList>
          The list of items to be added or replaced. This is a reference
          only; when the ESMF_State is destroyed the <itemList> items
          contained within it will not be destroyed. Also, the items in
          the <itemList> cannot be safely destroyed before the ESMF_State
          is destroyed. Since <itemList> items can be added to multiple
          containers, it remains the responsibility of the user to manage
          their destruction when they are no longer in use.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

