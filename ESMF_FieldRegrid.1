  26.6.65 ESMF_FieldRegrid - Compute a regridding operation

   INTERFACE:
   subroutine ESMF_FieldRegrid(srcField, dstField, routehandle, &
     zeroregion, termorderflag, checkflag, dynamicMask, rc)

   ARGUMENTS:
       type(ESMF_Field),               intent(in),    optional :: srcField
       type(ESMF_Field),               intent(inout), optional :: dstField
       type(ESMF_RouteHandle),         intent(inout)           :: routehandle
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
       type(ESMF_Region_Flag),         intent(in),    optional :: zeroregion
       type(ESMF_TermOrder_Flag),      intent(in),    optional :: termorderflag
       logical,                        intent(in),    optional :: checkflag
       type(ESMF_DynamicMask), target, intent(in),    optional :: dynamicMask
       integer,                        intent(out),   optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.
     * This interface was modified since ESMF version 5.2.0r. The fact
       that code using this interface compiles with the current ESMF
       version does not guarantee that it compiles with previous versions
       of this interface. If user code compatibility with version 5.2.0r
       is desired then care must be taken to limit the use of this
       interface to features that were available in the 5.2.0r release.
       Changes made after the 5.2.0r release:

        6.1.0
                Added argument termorderflag. The new argument gives the
                user control over the order in which the src terms are
                summed up.

        7.1.0r
                Added argument dynamicMask. The new argument supports the
                dynamic masking feature.

   DESCRIPTION:

   Execute the precomputed regrid operation stored in routehandle to
   interpolate from srcField to dstField. See ESMF_FieldRegridStore() on
   how to precompute the routehandle.

   Both srcField and dstField must match the respective Fields used during
   ESMF_FieldRegridStore() in type, kind, and memory layout of the gridded
   dimensions. However, the size, number, and index order of ungridded
   dimensions may be different. See section [981]37.2.5 for a more
   detailed discussion of RouteHandle reusability.

   The srcField and dstField arguments are optional in support of the
   situation where srcField and/or dstField are not defined on all PETs.
   The srcField and dstField must be specified on those PETs that hold
   source or destination DEs, respectively, but may be omitted on all
   other PETs. PETs that hold neither source nor destination DEs may omit
   both arguments.

   It is erroneous to specify the identical Field object for srcField and
   dstField arguments.

   This call is collective across the current VM.

   [srcField]
          ESMF_Field with source data.

   [dstField]
          ESMF_Field with destination data.

   routehandle
          Handle to the precomputed Route.

   [zeroregion]
          If set to ESMF_REGION_TOTAL (default) the total regions of all
          DEs in dstField will be initialized to zero before updating the
          elements with the results of the sparse matrix multiplication.
          If set to ESMF_REGION_EMPTY the elements in dstField will not be
          modified prior to the sparse matrix multiplication and results
          will be added to the incoming element values. Setting zeroregion
          to ESMF_REGION_SELECT will only zero out those elements in the
          destination Array that will be updated by the sparse matrix
          multiplication. See section [982]54.48 for a complete list of
          valid settings.

   [termorderflag]
          Specifies the order of the source side terms in all of the
          destination sums. The termorderflag only affects the order of
          terms during the execution of the RouteHandle. See the
          [983]37.2.1 section for an in-depth discussion of all
          bit-for-bit reproducibility aspects related to route-based
          communication methods. See [984]54.58 for a full list of
          options. The default setting depends on whether the dynamicMask
          argument is present or not. With dynamicMask argument present,
          the default of termorderflag is ESMF_TERMORDER_SRCSEQ. This
          ensures that all source terms are present on the destination
          side, and the interpolation can be calculated as a single sum.
          When dynamicMask is absent, the default of termorderflag is
          ESMF_TERMORDER_FREE, allowing maximum flexibility and partial
          sums for optimum performance.

   [checkflag]
          If set to .TRUE. the input Array pair will be checked for
          consistency with the precomputed operation provided by
          routehandle. If set to .FALSE. (default) only a very basic input
          check will be performed, leaving many inconsistencies
          undetected. Set checkflag to .FALSE. to achieve highest
          performance.

   [dynamicMask]
          Object holding dynamic masking information. See section
          [985]37.2.6 for a discussion of dynamic masking.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

