  27.5.6 ESMF_ArrayBundleCreate - Create an ArrayBundle from a list of Arrays

   INTERFACE:
   function ESMF_ArrayBundleCreate(arrayList, multiflag, &
     relaxedflag, name, rc)

   RETURN VALUE:
     type(ESMF_ArrayBundle) :: ESMF_ArrayBundleCreate

   ARGUMENTS:
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
     type(ESMF_Array), intent(in),  optional :: arrayList(:)
     logical,          intent(in),  optional :: multiflag
     logical,          intent(in),  optional :: relaxedflag
     character(len=*), intent(in),  optional :: name
     integer,          intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.

   DESCRIPTION:

   Create an ESMF_ArrayBundle object from a list of existing Arrays.

   The creation of an ArrayBundle leaves the bundled Arrays unchanged,
   they remain valid individual objects. An ArrayBundle is a light weight
   container of Array references. The actual data remains in place, there
   are no data movements or duplications associated with the creation of
   an ArrayBundle.

   [arrayList]
          List of ESMF_Array objects to be bundled.

   [multiflag]
          A setting of .true. allows multiple items with the same name to
          be added to arraybundle. For .false. added items must have
          unique names. The default setting is .false..

   [relaxedflag]
          A setting of .true. indicates a relaxed definition of "add"
          under multiflag=.false. mode, where it is not an error if
          arrayList contains items with names that are also found in
          arraybundle. The arraybundle is left unchanged for these items.
          For .false. this is treated as an error condition. The default
          setting is .false..

   [name]
          Name of the created ESMF_ArrayBundle. A default name is
          generated if not specified.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

