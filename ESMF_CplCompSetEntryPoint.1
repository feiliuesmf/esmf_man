  18.4.17 ESMF_CplCompSetEntryPoint - Set user routine as entry point for
  standard Component method

   INTERFACE:
   recursive subroutine ESMF_CplCompSetEntryPoint(cplcomp, methodflag, &
     userRoutine, phase, rc)

   ARGUMENTS:
     type(ESMF_CplComp),     intent(inout)         :: cplcomp
     type(ESMF_Method_Flag), intent(in)            :: methodflag
     interface
       subroutine userRoutine(cplcomp, importState, exportState, clock, rc)
         use ESMF_CompMod
         use ESMF_StateMod
         use ESMF_ClockMod
         implicit none
         type(ESMF_CplComp)          :: cplcomp      ! must not be optional
         type(ESMF_State)            :: importState  ! must not be optional
         type(ESMF_State)            :: exportState  ! must not be optional
         type(ESMF_Clock)            :: clock        ! must not be optional
         integer, intent(out)        :: rc           ! must not be optional
       end subroutine
     end interface
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
     integer,                intent(in),  optional :: phase
     integer,                intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.

   DESCRIPTION:

   Registers a user-supplied userRoutine as the entry point for one of the
   predefined Component methodflags. After this call the userRoutine
   becomes accessible via the standard Component method API.

   The arguments are:

   cplcomp
          An ESMF_CplComp object.

   methodflag
          One of a set of predefined Component methods - e.g.
          ESMF_METHOD_INITIALIZE, ESMF_METHOD_RUN, ESMF_METHOD_FINALIZE.
          See section [290]54.42 for a complete list of valid method
          options.

   userRoutine
          The user-supplied subroutine to be associated for this
          methodflag. The Component writer must supply a subroutine with
          the exact interface shown above for the userRoutine argument.
          Arguments in userRoutine must not be declared as optional, and
          the types, intent and order must match. Prior to Fortran-2008,
          the subroutine must be either a module scope procedure, or an
          external procedure that has a matching interface block specified
          for it. An internal procedure which is contained within another
          procedure must not be used. From Fortran-2008 onwards, an
          internal procedure contained within either a main program or a
          module procedure may be used. If the internal procedure is
          contained within a module procedure, it is subject to
          initialization requirements. See: [291]16.4.9

   [phase]
          The phase number for multi-phase methods. For single phase
          methods the phase argument can be omitted. The default setting
          is 1.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

