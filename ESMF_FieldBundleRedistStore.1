  25.5.22 ESMF_FieldBundleRedistStore - Precompute a FieldBundle redistribution
  with local factor argument

   INTERFACE:
   ! Private name; call using ESMF_FieldBundleRedistStore()
   subroutine ESMF_FieldBundleRedistStore<type><kind>(srcFieldBundle, &
   dstFieldBundle, routehandle, factor, &
   ignoreUnmatchedIndicesFlag, srcToDstTransposeMap, rc)

   ARGUMENTS:
   type(ESMF_FieldBundle), intent(in) :: srcFieldBundle
   type(ESMF_FieldBundle), intent(inout) :: dstFieldBundle
   type(ESMF_RouteHandle), intent(inout) :: routehandle
   <type>(ESMF_KIND_<kind>), intent(in) :: factor
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
   logical, intent(in), optional :: ignoreUnmatchedIndicesFlag(:)
   integer, intent(in), optional :: srcToDstTransposeMap(:)
   integer, intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.
     * This interface was modified since ESMF version 5.2.0r. The fact
       that code using this interface compiles with the current ESMF
       version does not guarantee that it compiles with previous versions
       of this interface. If user code compatibility with version 5.2.0r
       is desired then care must be taken to limit the use of this
       interface to features that were available in the 5.2.0r release.
       Changes made after the 5.2.0r release:

        8.1.0
                Added argument ignoreUnmatchedIndicesFlag to support cases
                where source and destination side do not cover the exact
                same index space.

   DESCRIPTION:

   Store a FieldBundle redistribution operation from srcFieldBundle to
   dstFieldBundle. PETs that specify a factor argument must use the
   <type><kind> overloaded interface. Other PETs call into the interface
   without factor argument. If multiple PETs specify the factor argument
   its type and kind as well as its value must match across all PETs. If
   none of the PETs specifies a factor argument the default will be a
   factor of 1.

   Both srcFieldBundle and dstFieldBundle are interpreted as
   sequentialized vectors. The sequence is defined by the order of
   DistGrid dimensions and the order of tiles within the DistGrid or by
   user-supplied arbitrary sequence indices. See section [743]28.2.18 for
   details on the definition of sequence indices. Redistribution
   corresponds to an identity mapping of the source FieldBundle vector to
   the destination FieldBundle vector.

   Source and destination FieldBundles may be of different <type><kind>.
   Further source and destination FieldBundles may differ in shape,
   however, the number of elements must match.

   It is erroneous to specify the identical FieldBundle object for
   srcFieldBundle and dstFieldBundle arguments.

   The routine returns an ESMF_RouteHandle that can be used to call
   ESMF_FieldBundleRedist() on any pair of FieldBundles that matches
   srcFieldBundle and dstFieldBundle in type, kind, and memory layout of
   the gridded dimensions. However, the size, number, and index order of
   ungridded dimensions may be different. See section [744]37.2.5 for a
   more detailed discussion of RouteHandle reusability.

   This method is overloaded for:
   ESMF_TYPEKIND_I4, ESMF_TYPEKIND_I8,
   ESMF_TYPEKIND_R4, ESMF_TYPEKIND_R8.

   This call is collective across the current VM.

   For examples and associated documentation regarding this method see
   Section [745]25.2.9.

   The arguments are:

   srcFieldBundle
          ESMF_FieldBundle with source data.

   dstFieldBundle
          ESMF_FieldBundle with destination data. The data in this
          FieldBundle may be destroyed by this call.

   routehandle
          Handle to the precomputed Route.

   factor
          Factor by which to multiply source data.

   [ignoreUnmatchedIndicesFlag]
          If set to .false., the default, source and destination side must
          cover the identical index space, using precisely matching
          sequence indices. If set to .true., mismatching sequence indices
          between source and destination side are silently ignored. The
          size of this array argument must either be 1 or equal the number
          of Fields in the srcFieldBundle and dstFieldBundle arguments. In
          the latter case, the handling of unmatched indices is specified
          for each Field pair separately. If only one element is
          specified, it is used for all Field pairs.

   [srcToDstTransposeMap]
          List with as many entries as there are dimensions in
          srcFieldBundle. Each entry maps the corresponding srcFieldBundle
          dimension against the specified dstFieldBundle dimension. Mixing
          of distributed and undistributed dimensions is supported.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

  25.5.23 ESMF_FieldBundleRedistStore - Precompute a FieldBundle redistribution
  without local factor argument

   INTERFACE:
   ! Private name; call using ESMF_FieldBundleRedistStore()
   subroutine ESMF_FieldBundleRedistStoreNF(srcFieldBundle, dstFieldBundle, &
     routehandle, ignoreUnmatchedIndicesFlag, &
     srcToDstTransposeMap, rc)

   ARGUMENTS:
     type(ESMF_FieldBundle), intent(in) :: srcFieldBundle
     type(ESMF_FieldBundle), intent(inout) :: dstFieldBundle
     type(ESMF_RouteHandle), intent(inout) :: routehandle
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
     logical, intent(in), optional :: ignoreUnmatchedIndicesFlag(:)
     integer, intent(in), optional :: srcToDstTransposeMap(:)
     integer, intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.2.0r. If code using this interface compiles with any version
       of ESMF starting with 5.2.0r, then it will compile with the current
       version.
     * This interface was modified since ESMF version 5.2.0r. The fact
       that code using this interface compiles with the current ESMF
       version does not guarantee that it compiles with previous versions
       of this interface. If user code compatibility with version 5.2.0r
       is desired then care must be taken to limit the use of this
       interface to features that were available in the 5.2.0r release.
       Changes made after the 5.2.0r release:

        8.1.0
                Added argument ignoreUnmatchedIndicesFlag to support cases
                where source and destination side do not cover the exact
                same index space.

   DESCRIPTION:

   Store a FieldBundle redistribution operation from srcFieldBundle to
   dstFieldBundle. PETs that specify non-zero matrix coefficients must use
   the <type><kind> overloaded interface and provide the factorList and
   factorIndexList arguments. Providing factorList and factorIndexList
   arguments with size(factorList) = (/0/) and size(factorIndexList) =
   (/2,0/) or (/4,0/) indicates that a PET does not provide matrix
   elements. Alternatively, PETs that do not provide matrix elements may
   also call into the overloaded interface without factorList and
   factorIndexList arguments.

   Both srcFieldBundle and dstFieldBundle are interpreted as
   sequentialized vectors. The sequence is defined by the order of
   DistGrid dimensions and the order of tiles within the DistGrid or by
   user-supplied arbitrary sequence indices. See section [746]28.2.18 for
   details on the definition of sequence indices. Redistribution
   corresponds to an identity mapping of the source FieldBundle vector to
   the destination FieldBundle vector.

   Source and destination Fields may be of different <type><kind>. Further
   source and destination Fields may differ in shape, however, the number
   of elements must match.

   It is erroneous to specify the identical FieldBundle object for
   srcFieldBundle and dstFieldBundle arguments.

   The routine returns an ESMF_RouteHandle that can be used to call
   ESMF_FieldBundleRedist() on any pair of FieldBundles that matches
   srcFieldBundle and dstFieldBundle in type, kind, and memory layout of
   the gridded dimensions. However, the size, number, and index order of
   ungridded dimensions may be different. See section [747]37.2.5 for a
   more detailed discussion of RouteHandle reusability.

   This call is collective across the current VM.

   For examples and associated documentation regarding this method see
   Section [748]25.2.9.

   The arguments are:

   srcFieldBundle
          ESMF_FieldBundle with source data.

   dstFieldBundle
          ESMF_FieldBundle with destination data. The data in this
          FieldBundle may be destroyed by this call.

   routehandle
          Handle to the precomputed Route.

   [ignoreUnmatchedIndicesFlag]
          If set to .false., the default, source and destination side must
          cover the identical index space, using precisely matching
          sequence indices. If set to .true., mismatching sequence indices
          between source and destination side are silently ignored. The
          size of this array argument must either be 1 or equal the number
          of Fields in the srcFieldBundle and dstFieldBundle arguments. In
          the latter case, the handling of unmatched indices is specified
          for each Field pair separately. If only one element is
          specified, it is used for all Field pairs.

   [srcToDstTransposeMap]
          List with as many entries as there are dimensions in
          srcFieldBundle. Each entry maps the corresponding srcFieldBundle
          dimension against the specified dstFieldBundle dimension. Mixing
          of distributed and undistributed dimensions is supported.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

