  51.6.8 ESMF_VMAllToAll - AllToAll communications across VM

   INTERFACE:
    subroutine ESMF_VMAllToAll(vm, sendData, sendCount, &
      recvData, recvCount, syncflag, &
      commhandle, rc)

   ARGUMENTS:
      type(ESMF_VM),                    intent(in)            :: vm
      <type>(ESMF_KIND_<kind>), target, intent(in)            :: sendData(:)
      integer,                          intent(in)            :: sendCount
      <type>(ESMF_KIND_<kind>), target, intent(out)           :: recvData(:)
      integer,                          intent(in)            :: recvCount
 -- The following arguments require argument keyword syntax (e.g. rc=rc). --
      type(ESMF_Sync_Flag),             intent(in),  optional :: syncflag
      type(ESMF_CommHandle),            intent(out), optional :: commhandle
      integer,                          intent(out), optional :: rc

   STATUS:
     * This interface is backward compatible with ESMF versions starting
       at 5.3.0r. If code using this interface compiles with any version
       of ESMF starting with 5.3.0r, then it will compile with the current
       version.

   DESCRIPTION:

   Collective ESMF_VM communication call that performs a total exchange
   operation on the contiguous data of <type><kind>. PET i sends
   contiguous sendCount elements of its sendData array to every PET,
   including itself. The sendCount elements sent to PET j are those
   starting at position j $\times$ sendCount $+$ 1, and are stored in
   recvData on PET $j$ in position i $\times$ recvCount $+$ 1.

   This method is overloaded for: ESMF_TYPEKIND_I4, ESMF_TYPEKIND_I8,
   ESMF_TYPEKIND_R4, ESMF_TYPEKIND_R8.

   TODO: The current version of this method does not provide an
   implementation of the non-blocking feature. When calling this method
   with syncflag = ESMF_SYNC_NONBLOCKING, error code ESMF_RC_NOT_IMPL will
   be returned and an error will be logged.

   The arguments are:

   vm
          ESMF_VM object.

   sendData
          Contiguous data array holding data to be sent. All PETs must
          specify a valid source array.

   sendCount
          Number of sendData elements to send from local PET to each
          destination PET.

   recvData
          Contiguous data array for data to be received. All PETs must
          specify a valid recvData argument large enough to accommodate
          the received data.

   recvCount
          Number of recvData elements to be received by local PET from
          each source PET.

   [syncflag]
          Flag indicating whether this call behaves blocking or
          non-blocking. The default is ESMF_SYNC_BLOCKING. See section
          [615]54.57 for a complete list of options.

   [commhandle]
          If present, a communication handle will be returned in case of a
          non-blocking request (see argument syncflag). The commhandle can
          be used in ESMF_VMCommWait() to block the calling PET until the
          communication call has finished PET-locally. If no commhandle
          was supplied to a non-blocking call the VM method
          ESMF_VMCommWaitAll() may be used to block on all currently
          queued communication calls of the VM context.

   [rc]
          Return code; equals ESMF_SUCCESS if there are no errors.

